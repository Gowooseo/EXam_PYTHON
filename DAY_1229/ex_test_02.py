#---------------------------------------------------------------
# [실습1] 임의의 숫자 데이터 7개를 저장한 리스트를 생성
#         리스트에 원소를 하나씩 한줄에 한개씩화면에 출력하세요.'
#---------------------------------------------------------------
data=[1,2,3,4,5,6,7]
print(data[0])
print(data[1])
print(data[2])
print(data[3])
print(data[4])
print(data[5])
print(data[6])

print(data[0],data[1],data[2],data[3],data[4],data[5],data[6],sep='\n')


#---------------------------------------------------------------
# [실습2] 아래 리스트에서 원소를 화면에 한 줄에 한개씩 출력하세요.
#---------------------------------------------------------------
datas=[[10,20],[40,50],[70,80,90]]
print(datas[0][0],datas[0][1],sep='\n')
print(datas[1][0],datas[1][1],sep='\n')
print(datas[2][0],datas[2][1],datas[2][2],sep='\n')



#---------------------------------------
# [실습3] 좋아하는 계절과 월(month)을 입력 받은 후 각각 변수에 저장하세요.
# 변수명은 season,month입니다. input 함수는 1개만 사용하세요.

sm=input("좋아하는 계절,월 입력(예:겨울,12월):")
sm.split(',')
season=sm[0]
month=sm[1]


#------------------------------------
#[실습4] 1~20으로 구성된 정수 리스트를 생성하세요.
#              *3의 배수 인덱스에 해당하는 정수만 출력하세요.
#              *3의 배수 인덱스에 해당하는 정수의 합계를 출력하세요.
nums=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]

# 슬라이싱
#합계를 구해야 해서 담아야 함

threeNums=nums[3::3]

print(threeNums[0],threeNums[1],threeNums[2],threeNums[3],threeNums[4],threeNums[5])
print(threeNums[0]+threeNums[1]+threeNums[2]+threeNums[3]+threeNums[4]+threeNums[5])

#range 함수로 푸는 방법

print(list(range(4,21,3))[0])

