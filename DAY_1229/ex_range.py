#--------------------------------------------
#range() 내장함수
#- 숫자의 범위를 생성해주는 함수
#- 반환값/결과값/리턴값: range 타입
# 범위에 포함되는 숫자 데이터는 원소/요소라고 함 => 인덱싱
#--------------------------------------------
#1~20으로 구성된 정수 데이터 생성

nums=range(20)

print(f'nums => {nums},{type(nums)}')
print(f'nums => {nums[0]},{type(nums[0])}')
print(f'nums => {nums[-1]},{type(nums[-1])}')
print(f'nums => {len(nums)}개')

# 앞부분 5개 원소 까지만 추출
print(f'nums => {nums[:5]},{type(nums[:5])}')
# range==> list 형 변환하기 => list(데이터)
print(f'list(nums[:5])=>{list(nums[:5])}')

#1~100까지로 구성된 정수 리스트 생성해주세요.
numslist=list(range(101))
print(f'numslist=>{numslist}')

#----------------------------
# range(시작값,끝값)
# -=> 기본:0  range(10) => 0<= <~10
# -=> 기본:1  range(1,10) => 1<= ~<10
# -=> 기본:5  range(5,10) => 5<= ~<10
#---------------------------------------------
#1~30범위에서 3의 배수만으로 구성된 리스트 생성
#3,6,9,12,15,18,21,24,27
threes=[3,6,9,12,15,18,21,24,27]

#1~100범위에서 3의 배수만으로 구성된 리스트 생성
#----------------------------
# range(시작값,끝값,증감)
# -=> 기본:0  range(10)      => 0<= <~10
# -=> 기본:1  range(1,10)    => 1<= ~<10
# -=> 기본:1  range(1,10,2)    => 5<= ~<10  1,3,5,7,9
#---------------------------------------------
threes1=list(range(3,31,3))
print(threes1)
#7의 배수
threes7=list(range(7,31,7))
print(threes7)