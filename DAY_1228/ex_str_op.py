#-------------------------------------------------
#str데이터 타입의 연산
# ------------------------------------------------
#-------------------------------------------------
# 산술연산 => 덧셈,뺄셈,곱셈,나눗셈.....
#-------------------------------------------------
msg1="Good"
msg2="Happy"

#덧셈연산(str+str만 가능)-----------------------------------------
print(f'msg1+msg2 =>{msg1+msg2}')
print(f'msg1+10 =>{msg1+str(10)}')

#뺄셈연산-----------------------------------------
#미지원
#print(f'msg1-msg2=>{msg1-msg2}')

#곱셈 연산-----------------------------------------
print(f'msg*10=> {msg1*10}')
#str *int 또는 int *str ===> str 데이터를 int만큼 반복 연결
print(f'3*msg=> {3*msg2}')

# 비교연산 => ,>,<,>=,<=,==,!=
# -str 안에 원소/요소 단위로 비교 됨 즉, 코드값으로 비교
#--------------------------------
print(f'"H">"I"=>{"H">"I"}')
print('H'>'h')

print(f"'H'>'h'")
print(f'"H">"I"=>{"H">"I"},{ord("H")},{ord("I")}')
print(f'"H">"h"=>{"H">"h"},{ord("H")},{ord("h")}')
#동일한 인덱스에 있는 요소의 코드값으로 비교
print(f'"HA">"Ha"=>{"HA">"Ha"}')
print(f'"ha">"Ha"=>{"ha">"Ha"}')

#-------------------------------------------------
# 논리연산 => and, or, not
#-------------------------------------------------
# str=> bool 관계
#- 요소/원소가 0개인경우=> False
#- 요소/원소가 1개 이상인 경우=> True
print(bool("HAppy"),bool(" "),bool(""))

print(f'not "HAppy"=>{not "HAppy"}')
print(f'not ""=>{not ""}')

#-------------------------------------------------
# 멤버 연산자 => 원소/요소가 있는 데이터 타입의 경우 사용
#- 요소 in 데이터   : 요소가 데이터에 포함되어 있는 경우 True
# -요소 not in 데이터: 요소가 데이터에 미포함되어 있는 경우 True
#-------------------------------------------------
print(f'"H" in "Happy":{"H" in "Happy"}')
print(f'"h" in "Happy":{"h"  in "Happy"}')

print(f'"H" not in "Happy":{"H" not in "Happy"}')
print(f'"H" not in "Happy":{"H" not in "Happy"}')

print(f'"1" in "1357":{"1"  in "1357"}')
print(f'"2" in "1357":{"2"  in "1357"}')

#




